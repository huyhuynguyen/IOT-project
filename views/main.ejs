<div class="col" style="padding-left: 0;">
    <div class="main__wrapper">
        <div class="header__main">
            <h2>Main</h2>
            <p>This is main page</p>
        </div>
        <div class="main-page__wrapper">
            <div class="main-page__container">
                <div class="sensor-table__header">
                    <h4 class="sensor-table__heading">Control devices</h4>
                </div>
                <div class="sensor-table__body">
                    <div class="sensor-table__value d-flex">
                        
                    </div>
                    <div class="sensor-table__led">
                        <h4>Devices</h4>
                        <div class="device__manual-wrapper">
                            <!-- <div class="device__manual-container d-flex">
                                <p>Manual Control</p>
                                <button class="device__manual-btn manual-off">Off</button>
                            </div> -->
                        </div>
                        <div class="d-flex">
                            <div class="led__container d-flex">
                            </div>
                            <div class="pump__container">

                            </div>
                            <div class="servo__container">

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    async function fetchJSON(url) {
        const response = await fetch(url);
        const data = await response.json();
        return data;
    }

    fetchJSON('/api/main/sensors').then(sensors => {
        const sensorsTable = document.querySelector('.sensor-table__value');
        const sensorsHTML = sensors.map(sensor => {
            return `
                <div class="value-sensor">
                    <div>
                        <p class="name">${sensor.data.name}</p>
                        <p class="value">${+sensor.data.value.toFixed(2)} ${sensor.data.unit}</p>
                    </div>
                    <div>
                        <img src="${sensor.data.icon}" alt="">
                    </div>
                </div>
            `;
        }).join('');
        sensorsTable.innerHTML = sensorsHTML;
    })

    fetchJSON('/api/main/controls/led').then(led => {
        getStateControlDevice(led, 'led');
    })

    fetchJSON('/api/main/controls/pump').then(pump => {
        getStateControlDevice(pump, 'pump')
    })

    fetchJSON('/api/main/controls/servo').then(servo => {
        getStateControlDevice(servo, 'servo')
    })

    var sendajax = function(docId) {
        var xhttp = new XMLHttpRequest()

        xhttp.onreadystatechange = function() {
            if (this.status == 200) {
                console.log(this.responseText);
            }
        }

        xhttp.open('POST', 'http://localhost:5000/api/main/sensor/change-control-device-status', true)
        xhttp.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
        xhttp.send(`deviceDoc=${docId}`);
    }

    var sendajaxManual = function() {
        var xhttp = new XMLHttpRequest()

        xhttp.onreadystatechange = function() {
            if (this.status == 200) {
                console.log(this.responseText);
            }
        }

        xhttp.open('POST', 'http://localhost:5000/api/main/sensor/change-control-device-manual-status', true)
        xhttp.send();
    }

    function changeControlDeviceStatus(controlDeviceButton, controlDeviceClassName) {
        const controlDeviceButtonClassName = controlDeviceButton.className.split(' ')[1]
        const controlDeviceButtonLabel = controlDeviceButton.innerText
        const controlDeviceObj = {
            label: controlDeviceButtonLabel == 'Off' ? 'On' : 'Off',
            className: controlDeviceButtonClassName == `${controlDeviceClassName}-off` ? `${controlDeviceClassName}-on` : `${controlDeviceClassName}-off`
        }

        // console.log(controlDeviceObj);

        controlDeviceButton.innerText = controlDeviceObj.label
        controlDeviceButton.className = [`btn-${controlDeviceClassName}`, controlDeviceObj.className, 'button-control'].join(' ')
    }

    function changeManualStatus(manualButton) {
        const manualButtonClassName = manualButton.className.split(' ')[1]
        const manualButtonLabel = manualButton.innerText
        const manualObj = {
            label: manualButtonLabel == 'Off' ? 'On' : 'Off',
            className: manualButtonClassName == `manual-off` ? 'manual-on' : `manual-off`
        }

        manualButton.innerText = manualObj.label
        manualButton.className = [`device__manual-btn`, manualObj.className].join(' ')
    }

    function getStateControlDevice(controlDevice, controlDeviceClassName) {
        const controlDeviceData = controlDevice.data
        const controlDeviceContainer = document.querySelector(`.${controlDeviceClassName}__container`);
        const controlDeviceManualContainer = document.querySelector('.device__manual-wrapper')
        const controlDeviceObj = {
            label: controlDeviceData.status ? 'On' : 'Off',
            className: controlDeviceData.status ? `${controlDeviceClassName}-on` : `${controlDeviceClassName}-off`,
            manualLable: controlDeviceData.manual ? 'On' : 'Off',
            manualClassName: controlDeviceData.manual ? 'manual-on' : 'manual-off'
        }

        const manunalControlDeviceHTML = `
            <div class="device__manual-container d-flex">
                <p>Manual Control</p>
                <button class="device__manual-btn ${controlDeviceObj.manualClassName}">${controlDeviceObj.manualLable}</button>
            </div>
        `;
        controlDeviceManualContainer.innerHTML = manunalControlDeviceHTML

        const controlDeviceHTML = `
            <div class="${controlDeviceClassName}__device">
                <p id=${controlDevice.docId} class="${controlDeviceClassName}-name">${controlDeviceData.name}</p>
                <div class="${controlDeviceClassName}-label__container">
                    <button class="btn-${controlDeviceClassName} ${controlDeviceObj.className} button-control">${controlDeviceObj.label}</button>
                </div>
            </div>
        `;
        controlDeviceContainer.innerHTML = controlDeviceHTML;


        const btnControls = document.querySelectorAll(`.button-control`)
        const btnManual = document.querySelector('.device__manual-btn');

        if (btnManual.classList[1] == "manual-off") {
            btnControls.forEach(btn => {
                btn.disabled = true; // disable button
                btn.removeEventListener("click", () => {});
            })
        } else {
            changeControlDevice(controlDeviceClassName)
        }

        btnManual.addEventListener('click', (e) => {
            const manualButton = e.target;
            changeManualStatus(manualButton);
            // remove event click listener
            if (btnManual.classList[1] == "manual-off") {
                btnControls.forEach(btn => {
                    btn.disabled = true;
                })
            } else {
                btnControls.forEach(btn => {
                    btn.disabled = false;
                })
            }

            sendajaxManual()
        })
    }

    function changeControlDevice(controlDeviceClassName) {
        const btnControlDevice = document.querySelector(`.btn-${controlDeviceClassName}`)
        
        btnControlDevice.addEventListener('click', (e) => {
            const controlDeviceButton = e.target
            docId = controlDeviceButton.closest(`.${controlDeviceClassName}__device`).querySelector(`.${controlDeviceClassName}-name`).id
            changeControlDeviceStatus(controlDeviceButton, controlDeviceClassName)
            sendajax(docId)
        })
    }
</script>